using UnityEngine;

[System.Serializable]
public class Card : ScriptableObject
{
    // Card properties
    public string cardName;
    public int cardIndex; // Used for determining the winner

    public static int[,] cardValues = 
    {
        /* Card Values For Top Row*/  {  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },
        /* Rock */                    {  1,  0, -1,  1,  1, -1,  1, -1,  1,  0,  0, -1,  1,  1,  1, -1,  1, -1, -1,  1, -1,  1,  1, -1,  2,  2 },
        /* Paper */                   {  2,  1,  0, -1, -1,  1,  1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1,  1,  1, -1, -1,  1, -1, -1,  2,  2 },
        /* Scissors */                {  3, -1,  1,  0,  1, -1,  1, -1,  1, -1, -1,  1, -1,  1,  1,  1, -1, -1,  1,  1, -1,  1,  1, -1,  2,  2 },
        /* Lizard */                  {  4, -1,  1, -1,  0,  1,  1, -1, -1,  1, -1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  2,  2 },
        /* Spock */                   {  5,  1, -1,  1, -1,  0,  1, -1,  1,  1,  1, -1,  1, -1, -1,  1,  1,  1, -1,  1,  1, -1,  1,  1,  2,  2 },
        /* Amputee */                 {  6, -1, -1, -1, -1, -1,  0,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2,  2 },
        /* Bullcrap */                {  7,  1,  1,  1,  1,  1, -1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2 },
        /* Baby Hand */               {  8, -1,  1, -1,  1, -1,  1, -1,  0, -1, -1,  0, -1,  1, -1,  0, -1,  1, -1, -1, -1,  1, -1,  1,  2,  2 },
        /* Skeleton */                {  9,  0,  1,  1, -1, -1,  1, -1,  1,  0,  0, -1, -1,  1, -1, -1,  1,  1, -1,  1,  1, -1,  1, -1,  2,  2 },
        /* Rock 2 */                  { 10,  0, -1,  1,  1, -1,  1, -1,  1,  0,  0, -1,  1,  1,  1, -1,  1, -1, -1,  1, -1,  1,  1, -1,  2,  2 },
        /* Man Spider */              { 11,  1,  1, -1, -1,  1,  1, -1,  0,  1, -1,  0, -1,  1, -1,  1,  1, -1,  1, -1, -1,  1,  1, -1,  2,  2 },
        /* ok */                      { 12, -1,  1,  1, -1, -1,  1, -1,  1,  1, -1,  1,  0,  1,  1, -1,  1, -1,  1,  1, -1,  1, -1,  1,  2,  2 },
        /* AI Generated */            { 13, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1, -1,  0, -1,  1, -1,  0,  1, -1, -1,  1,  1, -1,  2,  2 },
        /* Bird */                    { 14, -1,  1, -1,  1,  1,  1, -1,  1,  1, -1,  1, -1,  1,  0,  0, -1,  1, -1,  1,  1, -1, -1, -1,  2,  2 },
        /* Dog */                     { 15,  1,  1, -1,  1, -1,  1, -1,  0,  1,  1, -1,  1, -1,  0,  0, -1,  1, -1, -1, -1,  1,  1, -1,  2,  2 },
        /* Finger Gun */              { 16, -1,  1,  1,  1, -1,  1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  0, -1, -1,  1,  1, -1, -1,  1,  2,  2 },
        /* Man Of Iron */             { 17,  1, -1,  1,  1, -1,  1, -1, -1, -1,  1,  1,  1,  0, -1, -1,  1,  0,  1,  1, -1,  1,  1, -1,  2,  2 },
        /* Green Fist */              { 18,  1, -1, -1,  1,  1,  1, -1,  1,  1,  1, -1, -1, -1,  1,  1,  1, -1,  0, -1,  1, -1, -1, -1,  2,  2 },
        /* Point */                   { 19, -1,  1, -1,  1, -1,  1, -1,  1, -1, -1,  1, -1,  1, -1,  1, -1, -1,  1,  0, -1,  1,  1,  1,  2,  2 },
        /* Thumbs Up */               { 20,  1,  1,  1,  1, -1,  1, -1,  1, -1,  1,  1,  1,  1, -1,  1, -1,  1, -1,  1,  0,  1,  1,  1,  2,  2 },
        /* Thumbs Down */             { 21, -1, -1, -1, -1,  1,  1, -1, -1,  1, -1, -1, -1, -1,  1, -1,  1, -1,  1, -1, -1,  0, -1,  1,  2,  2 },
        /* Thumbs Side */             { 22, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1, -1, -1,  1,  0,  1,  2,  2 },
        /* Lego Hand */               { 23,  1,  1,  1,  1, -1,  1, -1, -1,  1,  1,  1, -1,  1,  1,  1, -1,  1,  1, -1, -1, -1, -1,  0,  2,  2 },
        /* Cross Fingers*/            { 24,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  2 },
        /* Pray */                    { 25,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0 }
    };

    // Constructor
    public Card(string name, int index)
    {
        cardName = name;
        cardIndex = index;
    }
}
